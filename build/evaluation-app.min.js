var app=angular.module("EvaluationApp",["ngRoute"]);app.config(function(a){a.when("/home/",{templateUrl:"templates/home.html",controller:"HomeController"}).when("/template/new",{templateUrl:"templates/newTemplate.html",controller:"TemplateController"}).when("/evaluation/new",{templateUrl:"templates/newEvaluation.html",controller:"EvaluationController"}).when("/evaluation/:evaluationID",{templateUrl:"templates/evaluation.html",controller:"EvaluationController"}).when("/evaluation/",{templateUrl:"templates/evaluation.html",controller:"EvaluationController"}).when("/",{templateUrl:"templates/login.html",controller:"LoginController"}).otherwise({redirectTo:"/"})}),app.controller("EvaluationController",["$scope","ApiFactory","$routeParams","$location",function(a,b,c,d){var e=c.evaluationID;"/evaluation/new"==d.url()&&console.log("in new evaluation"),"/evaluation/"==d.url()&&console.log("in evaluation"),a.init=function(c){void 0!==c?b.getEvaluationById(c).then(function(b){a.evaluation=b},function(b){console.log("Error fetching evaluation: "+b),a.errorMessage="Error fetching evaluation: "+b}):a.evaluation={TitleIS:"",TitleEN:"",IntroTextIS:"",IntroTextEN:"",CourseQuestions:[],TeacherQuestions:[]}},a.init(e),a.addAnswer=function(a){a.Answers.push("New answer")},a.addCourseQuestion=function(){a.evaluation.CourseQuestions.push({ID:a.evaluation.CourseQuestions.length,TextIS:"",TextEN:"",ImageURL:"",Type:"single",Answers:[]})}}]),app.controller("HomeController",["$scope","ApiFactory","$location",function(a,b,c){a.showButton=function(){return"admin"==b.getUser().Role?!0:!1},a.newEvaluation=function(){c.path("/evaluation/new")},a.newTemplate=function(){c.path("/template/new")},b.getAllEvaluations().then(function(b){console.log("Success, data: ",b),a.evaluations=b},function(a){console.log("Error: "+a)},function(a){console.log("Update: "+a)})}]),app.controller("LoginController",["$scope","ApiFactory","$location",function(a,b,c){a.loginCred={userName:"",password:""},a.token="",a.user="",a.login=function(d){b.login(d.user,d.pass).then(function(d){a.user=d.User,a.token=d.Token,console.log("THE TOKEN: "+b.getToken()),c.path("/home/")},function(){console.log("Could not log in."),a.errorMessage="Could not log in."})}}]),app.controller("TemplateController",["$scope","ApiFactory","$routeParams","$location",function(a,b,c,d){a.init=function(){a.courseQuestions=[],a.teacherQuestions=[]},a.newTemplate=function(){d.path("/template/new")}}]),app.factory("ApiFactory",["$q","$timeout","$http",function(a,b,c){var d="http://dispatch.ru.is/H05/",e="",f="";return{getAllEvaluations:function(){var a=c.get(d+"api/v1/evaluations").then(function(a){return a.data});return a},getEvaluationById:function(a){var b=c.get(d+"api/v1/evaluations/"+a).then(function(a){return a.data});return b},addEvaluation:function(a){var b=c.post(d+"api/v1/evaluations",a).then(function(a){return a.data});return b},login:function(a,b){var g=c.post(d+"api/v1/login",{user:a,pass:b}).then(function(a){return c.defaults.headers.common.Authorization="Basic "+a.data.Token,e=a.data.User,f=a.data.Token,a.data});return g},newEvaluation:function(a,b,e){var f=c.post(d+"api/v1/evaluations",{TemplateID:a,StartDate:b,EndDate:e}).then(function(a){return a.data});return f},newTemplate:function(a,b,e,f,g,h){var i=c.post(d+"api/v1/evaluationtemplates",{ID:a,TitleIS:b,TitleEN:e,IntroTextIS:f,IntroTextEN:g,CourseQuestions:h}).then(function(a){return a.data});return i},getUser:function(){return e},getToken:function(){return f}}}]);